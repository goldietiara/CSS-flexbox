body {
  margin: 0;
}

/* display
flex and inline-flex = create either a block level or inline flex container
 */
.container {
  border: 10px solid Gainsboro;
  display: inline-flex;
  margin: 0.5rem;
}

.flex-item {
  color: grey;
  font-size: 1.2rem;
  padding: 1rem;
  text-align: center;
}

.item-1 {
  background-color: Snow;
  font-weight: bold;
}
.item-2 {
  background-color: HoneyDew;
}
.item-3 {
  background-color: Azure;
}
.item-4 {
  background-color: Beige;
}
.item-5 {
  background-color: Ivory;
}
.item-6 {
  background-color: LavenderBlush;
}
.item-7 {
  background-color: MistyRose;
}
.item-8 {
  background-color: Lavender;
}
.item-9 {
  background-color: lightpink;
}

/* flex direction
row (default)   = display the item from left to right
row reverse     = display the item from right to left
column          = display the item from top to bottom
column reverse  = display the item from bottom to top
 */
.container-2 {
  border: 10px solid Gainsboro;
  display: inline-flex;
  flex-direction: row-reverse;
  margin: 1rem;
}
.container-2 {
  border: 10px solid Gainsboro;
  display: flex;
  flex-direction: column-reverse;
  margin: 0.5rem;
}

/* CSS warp prop
warp          = perevent the item from going overflow/shrink, the item moves to the next row (move down) when the browser width get reduce
no warp       = default, not doing anything -__-
reverse warp  = just like wrap but the item will go up
*/
.container-3 {
  border: 10px solid Gainsboro;
  display: inline-flex;
  /* flex-direction: column-reverse; */
  flex-wrap: wrap;
  margin: 0.5rem;
}

/* flex flow 
setting up flex direction and flex warp
*/
.container-4 {
  border: 10px solid Gainsboro;
  display: inline-flex;
  /* flex-direction: column-reverse; */
  /* flex-wrap: wrap; */
  flex-flow: row wrap-reverse;
  margin: 0.5rem;
}

/* gap properties
sets gap between columns
values can be use: non negative value / percentage
*/
.container-5 {
  border: 10px solid Gainsboro;
  display: inline-flex;
  /* flex-direction: column-reverse; */
  /* flex-wrap: wrap; */
  flex-flow: row wrap;
  /* column-gap: 20px;
  row-gap: 20px; */
  gap: 40px 20px;
  margin: 0.5rem;
}

/* justify content
flex start     = align item to the left or top
flex end       = align item to the right or bottom
center         = align item to the center
space between  = an equally space between the item (no space on start and end)
space around   = space equally distributed between the item, but the space on the start and end value are half of the space between the item
space evenly   = space equally distributed between the item
*/
.container-6 {
  border: 10px solid Gainsboro;
  display: flex;
  /* flex-direction: column-reverse; */
  /* flex-wrap: wrap; */
  /* flex-flow: row wrap; */
  /* column-gap: 20px;
  row-gap: 20px; */
  /* gap: 40px 20px; */
  justify-content: space-evenly;
  margin: 0.5rem;
}
.container-7 {
  border: 10px solid Gainsboro;
  display: flex;
  height: 300px;
  width: 1000px;
  /* flex-direction: column-reverse; */
  /* flex-wrap: wrap; */
  flex-flow: column wrap;
  /* column-gap: 20px;
  row-gap: 20px; */
  /* gap: 40px 20px; */
  justify-content: center;
  margin: 0.5rem;
}
